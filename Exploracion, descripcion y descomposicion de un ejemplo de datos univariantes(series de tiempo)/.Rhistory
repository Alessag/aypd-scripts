#### ---------------------------------------------------------------------------
#### TEMA Introduccion al procesamiento de datos univariantes y multivariantes
#### EXPLORACION, DESCRIPCION Y DESCOMPOSICION DE DATOS UNIVARIANTES
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo dataset.csv
# La primera fila contiene los nombres de las columnas
# Los datos estan separados por columnas
# La primera columna identifica a la variable SystemCodeNumber
# El archivo contiene 35717 filas
# Las variables contienen informacion sobre la tasa de ocupacion de los aparcamientos
# de Birmingham entre las 8:00 a las 16:30 del 2016/10/04 al 2016/12/19
# Las variables registradas fueron:
# Numero de codigo del sistema: ID del aparcamiento
# Capacidad: Capacidad del aparcamiento
# Ocupacion: Grado de ocupacion del aparacamiento
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
dataBalloons <- read.csv(ruta_csv)
data <- read.csv(ruta_csv)
head(data)
uu <- "https://raw.githubusercontent.com/vmoprojs/DataLectures/master/IPCEcuador.csv"
datos <- read.csv(url(uu),header=T,dec=".",sep=",")
IPC <- ts(datos$IPC,start=c(2005,1),freq=12)
plot(IPC)
plot(diff(IPC)) # Se puede ver una inlfacion estable
abline(h=0)
View(data)
load("/home/elpapi42/Documents/01. UNET/AYPD/Datos de ejemplo/D_EEG.rda")
load("/home/elpapi42/Documents/01. UNET/AYPD/Datos de ejemplo/D_EEG.rda")
#### ---------------------------------------------------------------------------
#### Exploración de modelos de series de tiempo en
#### Electroencefalogramas
#### Realizado Abril 2018.
#### PhD. Rossana Timaure
#### UNIVERSIDAD NACIONAL EXPERIMENTAL DEL TÁCHIRA
#### GRUPO DE INVESTIGACIONES EN BIOTECNOLÓGIA AGRICOLA Y AMBIENTAL
####
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
#### ------------ CARGA DE LIBRERIAS R Versión 3.4.2 64 Bits -------------------
library(splines)
library(MASS)
library(tseries)
library(mlbench)
library(RODBC)
library(rpart)
library(forecast)
library(UsingR)
library(foreign)
library(ipred)
library(relimp)
library(Hmisc)
library(e1071)
library(lattice)
library(XML)
library(cluster)
library(RODBC)
library(foreign)
library(rpart)
library(st)
library(partsm)
library(fUnitRoots)
library(randomForest)
library (ts)
library(MASS)
library(tserie)
library(foreing)
library(car)
library(Matrix)
library(lme4)
library(mlmRev)
library(agridat)
library(coda)
library(ape)
library(MCMCglmm)
library(ggplot2)
library(influence.ME)
library(influence.SEM)
library(influenceR)
library(pbkrtest)
library(RLRsim)
library(longitudinal)
library(gstat)
library(lattice)
library(nlme)
library(HLMdiag)
library(lmerTest)
library(mi)
library(RColorBrewer)
library(astsa)
library(forecast)
library(PerformanceAnalytics)
library(dygraphs)
library(ggcorrplot)
## Cambiando el directorio de trabajo
setwd("c:")
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
## 1. ADQUISICIÓN DE LOS DATOS
## Cargando el archivo de datos (Datos en formato crudo, exportado sin
## modificaciones, del archivo XLS)
EEG <- read.table("c:/E1_EEG.txt",header=TRUE)
EEG
## -------------- CREACIÓN DE UN ARCHIVO DE DATOS PARA R -----------------------
save(EEG, file = "EEG.rda")
load("EEG.rda")
EEG
# 2. DESCRIPCIÓN Y EXPORACIÓN DE LOS DATOS
#-------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# VARIABLES-
# AF3
# F7
# F3
# FC5
# T7
# P7
# O1
# O2
# P8
# T8
# FC6
# F4
# F8
# AF4
# eyeDetection
### ----------------------------------------------------------------------------
###5. DESCOMPOSICIÓN DEL ARCHIVO DE DATOS EN SERIES DE TIEMPO UNIVARIANTES ---
### ----------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
#### -------------- SERIE DE PREVALENCIA DE PLUMERO POR PARCELA -----------------
AF3A <-EEG$AF3[EEG$eyeDetection ==1]
AF3A
AF3C <-EEG$AF3[EEG$eyeDetection ==0]
AF3C
serie_AF3 <- ts(EEG$AF3,start=c(1),end=(249),frequency=60,)
is.ts(serie_AF3)
serie_AF3A <- ts(AF3A,start=c(1),end=(124),frequency=60,)
is.ts(serie_AF3A)
serie_AF3C <- ts(AF3C,start=c(1),end=(124),frequency=60,)
is.ts(serie_AF3C)
plot(serie_AF3, xlab="Tiempo (minutos)", ylab=" Electrodo AF3")
par(mar=c(5, 12, 4, 4) + 0.1)
plot( serie_AF3A, xlab="Tiempo (meses)", ylab="", type="p",col="black", main="", xlim=c(0,130), ylim=c(3090,4450))
mtext(2,text="Electrodo AF3 (Ojos abiertos)",line=2)
par(new=T)
plot(serie_AF3C, axes=F, ylim=c(3090,4450), xlab="", ylab="",
type="o",col="red", lty=2, main="",xlim=c(0,130),lwd=2)
axis(2, ylim=c(3090,4450),lwd=2,line=3.5)
mtext(2,text=" Electrodo AF3 (Ojos cerrados)",line=5.5)
D_S1 <- decompose(serie_AF3, type = c("additive", "multiplicative"), filter = NULL)
D_P2 <- decompose(serie_AF3A, type = c("additive", "multiplicative"), filter = NULL)
D_P3 <- decompose(serie_AF3C, type = c("additive", "multiplicative"), filter = NULL)
plot(D_S1)
save(EEG, file = "EEG.rda")
load("EEG.rda")
EEG
AF3A <-EEG$AF3[EEG$eyeDetection ==1]
AF3A
AF3C <-EEG$AF3[EEG$eyeDetection ==0]
AF3C
serie_AF3 <- ts(EEG$AF3,start=c(1),end=(249),frequency=60,)
is.ts(serie_AF3)
plot(serie_AF3, xlab="Tiempo (minutos)", ylab=" Electrodo AF3")
View(datos)
View(datos)
View(datos)
View(datos)
head(data)
ocupancy_ts <- ts(data$Occupancy, start=1, end=3, frequency=12)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=76, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
descompose_occupancy_ts <- decompose(ocupancy_ts, type = c("additive", "multiplicative"), filter = NULL)
plot(descompose_occupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
descompose_occupancy_ts <- decompose(ocupancy_ts, type = c("additive", "multiplicative"), filter = NULL)
plot(descompose_occupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=8.5, frequency=646)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
# descomposiscion?
descompose_occupancy_ts <- decompose(ocupancy_ts, type = c("additive", "multiplicative"), filter = NULL)
plot(descompose_occupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=76, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=76, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=76, frequency=510)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
View(data)
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
# Creamos la serie de tiempo
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=8.5)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
ocupancy_ts <- ts(data$Occupancy, start=1, end=646, frequency=24)
ocupancy_ts
# Validamos el objeto de la serie de tiempo
is.ts(ocupancy_ts)
plot(ocupancy_ts)
View(data)
