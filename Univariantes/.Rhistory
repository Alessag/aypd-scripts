#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS CUANTITATIVOS
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo adult+stretch.data
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 20 filas
# Las variables contienen informacion de globos estirados
# Las variables registradas fueron:
# Color: Amaraillo, purpura
# Size: Grande, pequeño
# Act: Estirar, sumergir
# Age: Adulto, niño
# Inflated: Verdadero, falso
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataBalloons
dataBalloons <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS CUANTITATIVOS
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo adult+stretch.data
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 20 filas
# Las variables contienen informacion de globos estirados
# Las variables registradas fueron:
# Color: Amaraillo, purpura
# Size: Grande, pequeño
# Act: Estirar, sumergir
# Age: Adulto, niño
# Inflated: Verdadero, falso
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataBalloons
dataBalloons <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS CUANTITATIVOS
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo adult+stretch.data
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 20 filas
# Las variables contienen informacion de globos estirados
# Las variables registradas fueron:
# Color: Amaraillo, purpura
# Size: Grande, pequeño
# Act: Estirar, sumergir
# Age: Adulto, niño
# Inflated: Verdadero, falso
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataCaesarian
dataCaesarian <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
# Miramos los datos
head(dataCaesarian)
View(dataCaesarian)
table(dataCaesarian$inflated)
bartlett.test(age,data=dataCaesarian)
bartlett.test(dataCaesarian.age,data=dataCaesarian)
head(dataCaesarian)
#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS UNIVARIANTES
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo caesarian.csv.arff
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 80 filas
# Las variables contienen informacion de sobre el parto de un bebe
# Las variables registradas fueron:
# Edad:{ 22,26,28,27,32,36,33,23,20,29,25,37,24,18,30,40,31,19,21,35,17,38 }
# Numero de parto: { 1,2,3,4 }
# Hora de parto: { 0,1,2 } -> {0 = oportuna , 1 = prematura , 2 = tardia}
# Presion arterial: { 2,1,0 } -> {0 = bajo , 1 = normal , 2 = alto }
# Estado del corazon: { 1,0 } -> {0 = apto, 1 = inepto }
# Cesárea: { 0,1 } -> {0 = No, 1 = Si }
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataCaesarian
dataCaesarian <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
# Miramos los datos
head(dataCaesarian)
View(dataCaesarian)
dataCaesarian2 <- dataCaesarian
# Miramos los datos
head(dataCaesarian)
# Procesamiento de datos faltantes
# Hacemos una copia de la data original
dataCaesarian2 <- dataCaesarian
# Vamos a reemplazar los valores perdidos de la columna blood pleasure con la media
dataCaesarian2$blood_preassure_new <- ifelse(is.na(dataCaesarian2$blood_preassure),
mean(dataCaesarian2$blood_preassure, na.rm = TRUE),
dataCaesarian2$blood_preassure
)
# Miramos los datos
head(dataCaesarian)
# Procesamiento de datos faltantes
# Hacemos una copia de la data original
dataCaesarian2 <- dataCaesarian
# Vamos a reemplazar los valores perdidos de la columna blood pleasure con la media
dataCaesarian2$blood_preassure_new <- ifelse(is.na(dataCaesarian2$blood_preassure),
mean(dataCaesarian2$blood_preassure, na.rm = TRUE),
dataCaesarian2$blood_preassure
)
# Miramos los datos
head(dataCaesarian2)
View(dataCaesarian2)
View(dataCaesarian2)
View(dataCaesarian)
View(dataCaesarian2)
#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS UNIVARIANTES
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo caesarian.csv.arff
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 80 filas
# Las variables contienen informacion de sobre el parto de un bebe
# Las variables registradas fueron:
# Edad:{ 22,26,28,27,32,36,33,23,20,29,25,37,24,18,30,40,31,19,21,35,17,38 }
# Numero de parto: { 1,2,3,4 }
# Hora de parto: { 0,1,2 } -> {0 = oportuna , 1 = prematura , 2 = tardia}
# Presion arterial: { 2,1,0 } -> {0 = bajo , 1 = normal , 2 = alto }
# Estado del corazon: { 1,0 } -> {0 = apto, 1 = inepto }
# Cesárea: { 0,1 } -> {0 = No, 1 = Si }
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataCaesarian
dataCaesarian <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
# Miramos los datos
head(dataCaesarian)
# Procesamiento de datos faltantes
# Hacemos una copia de la data original
dataCaesarian2 <- dataCaesarian
# Vamos a reemplazar los valores perdidos de la columna blood pleasure con la media
dataCaesarian2$blood_preassure_new <- ifelse(is.na(dataCaesarian2$blood_preassure),
mean(dataCaesarian2$blood_preassure, na.rm = TRUE),
dataCaesarian2$blood_preassure
)
# Miramos los datos
head(dataCaesarian2)
View(dataCaesarian2)
# Vamos a reemplazar los valores perdidos de la columna age con la mediana
dataCaesarian2$age_new <- ifelse(is.na(dataCaesarian2$age),
median(dataCaesarian2$age, na.rm = TRUE),
dataCaesarian2$age
)
# Miramos los datos
head(dataCaesarian2)
# Vamos a reemplazar los valores perdidos de la columna blood pleasure con la media
dataCaesarian3$blood_preassure_new <- ifelse(is.na(dataCaesarian3$blood_preassure),
mean(dataCaesarian3$blood_preassure, na.rm = TRUE),
dataCaesarian3$blood_preassure
)
# Miramos los datos
head(dataCaesarian3)
View(dataCaesarian2)
dataCaesarian3$delivery_number_new <- ifelse(is.na(dataCaesarian3$delivery_number),
median(dataCaesarian3$delivery_number, na.rm = TRUE),
dataCaesarian3$delivery_number
View(dataCaesarian2)
head(dataCaesarian3)
#### ---------------------------------------------------------------------------
#### TEMA 1. Introducción al procesamiento de datos
#### EXPLORACION Y DESCRIPCION DE DATOS UNIVARIANTES
#### REALIZADO POR: Alessandra Amicarella Girardi, V-26.209.731
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
####                  CARGA DE PAQUETES
library(readr)
library(gapminder)
#### ---------------------------------------------------------------------------
#### ---------------------------------------------------------------------------
# Lectura de datos: Archivo caesarian.csv.arff
# La primera fila no contiene los nombres de las columnas
# Los datos estan separados por ,
# La primera columna identifica a las filas
# El archivo contiene 80 filas
# Las variables contienen informacion de sobre el parto de un bebe
# Las variables registradas fueron:
# Edad:{ 22,26,28,27,32,36,33,23,20,29,25,37,24,18,30,40,31,19,21,35,17,38 }
# Numero de parto: { 1,2,3,4 }
# Hora de parto: { 0,1,2 } -> {0 = oportuna , 1 = prematura , 2 = tardia}
# Presion arterial: { 2,1,0 } -> {0 = bajo , 1 = normal , 2 = alto }
# Estado del corazon: { 1,0 } -> {0 = apto, 1 = inepto }
# Cesárea: { 0,1 } -> {0 = No, 1 = Si }
# Buscamos la ruta del archivo y la guardamos en una variable
ruta_csv <- file.choose()
# Importar datos, los leemos, le asignamos un titulo a cada columna y los guardamos
# en una variable llamada dataCaesarian
dataCaesarian <- read.csv(ruta_csv,
col.names = c('age',
'delivery_number',
'delivery_time',
'blood_preassure',
'heart_problem',
'caesariam'))
# Miramos los datos
head(dataCaesarian)
# Procesamiento de datos faltantes
# Hacemos una copia de la data original
dataCaesarian2 <- dataCaesarian
# Vamos a reemplazar los valores perdidos de la columna age con la mediana
dataCaesarian2$age_new <- ifelse(is.na(dataCaesarian2$age),
median(dataCaesarian2$age, na.rm = TRUE),
dataCaesarian2$age
)
# Miramos los datos
head(dataCaesarian2)
View(dataCaesarian2)
hist(dataCaesarian)
# Imputacion de datos
hist(dataCaesarian$age)
# Imputacion de datos
hist(dataCaesarian$delivery_time)
# Imputacion de datos
hist(dataCaesarian$)
# Imputacion de datos
hist(dataCaesarian$blood_preassure)
# Imputacion de datos
hist(dataCaesarian$age)
# Imputacion de datos
hist(dataCaesarian$heart_problem)
# Imputacion de datos
hist(dataCaesarian$caesariam)
# Imputacion de datos
# Vamos a graficar la
hist(dataCaesarian$delivery_number)
# Luego vamos a hacer un grafico de caja y bigotes para ver los outliers
boxplot(dataCaesarian$delivery_number, horizontal = TRUE)
# Obtenemos la lista de valores outliers
boxplot.stats(dataCaesarian$delivery_number)
data_caesarian_whiout_outliers <- dataCaesarian(dataCaesarian$delivery_number < 3)
# Procedemos a realizar el grafico de caja y bigotes para los valores que no son outliers
boxplot(data_caesarian_whiout_outliers$delivery_number, horizontal = TRUE)
# Miramos los datos
head(dataCaesarian)
# Procesamiento de datos faltantes
# Hacemos una copia de la data original
dataCaesarian2 <- dataCaesarian
# Vamos a reemplazar los valores perdidos de la columna age con la mediana
dataCaesarian2$age_new <- ifelse(is.na(dataCaesarian2$age),
median(dataCaesarian2$age, na.rm = TRUE),
dataCaesarian2$age
)
# Miramos los datos
head(dataCaesarian2)
# Podemos observar que hemos creado una nueva columna llamada
# age_new y en esta los valores NA de la columna original han sido reemplazados
# por la media para cada uno de ellos
# Imputacion de datos
# Vamos a graficar la columna de numero de parto en un histograma
# para saber como estan distribuidos los valores
hist(dataCaesarian$delivery_number)
# Luego vamos a hacer un grafico de caja y bigotes para ver los outliers
boxplot(dataCaesarian$delivery_number, horizontal = TRUE)
# Obtenemos la lista de valores outliers
boxplot.stats(dataCaesarian$delivery_number)
# Revisando los resultados obtenidos podemos ver que el primer resultado
# devuelto por la funcion($stats) nos esta diciendo que el bigote inferior
# el limitie inferior de la caja y la mediana del conjunto de
# valores se encuentran en 1, la parte superior de la caja se encuentra en 2
# $n nos dice la cantidad de datos que hay, , $conf nos muestra los intervalos de
# confiaza a un 95% y $out nos muestra los outliers que se pueden ver en el grafico
# Ahora vamos a obtener la lista de valores que no son outliers
data_caesarian_whiout_outliers <- dataCaesarian(dataCaesarian$delivery_number < 3)
# Procedemos a realizar el grafico de caja y bigotes para los valores que no son outliers
boxplot(data_caesarian_whiout_outliers$delivery_number, horizontal = TRUE)
head(dataCaesarian)
data_caesarian_whiout_outliers <- dataCaesarian(dataCaesarian$delivery_number < 3)
# Procedemos a realizar el grafico de caja y bigotes para los valores que no son outliers
boxplot(data_caesarian_whiout_outliers$delivery_number, horizontal = TRUE)
data_caesarian_whiout_outliers <- dataCaesarian$delivery_number < 3
data_caesarian_whiout_outliers <- dataCaesarian$delivery_number(dataCaesarian$delivery_number < 3)
data_caesarian_whiout_outliers <-dataCaesarian
data_caesarian_whiout_outliers <-dataCaesarian(dataCaesarian$delivery_number)
clear
cls
data_caesarian_whiout_outliers <-dataCaesarian(dataCaesarian$delivery_number)
data_caesarian_whiout_outliers <- dataCaesarian(dataCaesarian$delivery_number)
# Prueba de homogeniedad de varianza
# bartlett.test(dataCaesarian.age,data=dataCaesarian)
View(dataCaesarian)
# los test de homogeneidad no arrojan mucha variacion.
View(crioterapia)
bartlett.test(crioterapia)
bartlett.test(data)
##---------------------------------------------------------------------------------
##---------------------------------------------------------------------------------
## Tema 2: Calidad y representatividad de los datos
## DESCRIPCIÓN Y EXPLORACIÓN DE DATOS
##Debe seleccionar un conjunto de datos univariantes;  se deberá realizar la descripción y exploración de los datos, así como la evaluación de sus características de homogeneidad, datos faltantes y datos atípicos, en caso de seleccionar datos completos, generar datos faltantes entre el 5 y 20 % y evaluar la eficiencia de las técnicas de imputación de datos.
##Se deberá desarrollar un script en lenguaje R. La visualización de los resultados y su interpretación, deberá incorporarlos como comentarios en el script o imprimirlos por pantalla.
#En este siguiente apartado se intentara leer los datos de un dataset univariante.
#Para este  ejemplo de datos descriptivos se elegio el dataset Cryotherapy , posee 7 atributos,  90 instancias, fue donada en 2018, este conjunto de datos contiene información sobre los resultados del tratamiento de verrugas de 90 pacientes que utilizan crioterapia.
# las variables
#Sex 1-Hombre,2 Mujer
#Age La edad de la persona
#Time Tiempo que duro el tratamiento en años, es Real
#Number_of_Warts Esto se refiere al numero de verrugas o tumores, Entero
#Type Esto se refiere al tipo de verruga o anomalia que experimenta el paciente, Entero
#Area El tamaño abarcado por la enfermedad, Entero
#Result_of_Treatment, Si el paciente logro sobrevivir al tratamiento, Booleano o Entero, solo toma 1-0
#Permite leer el dataset excel.
install.packages("openxlsx")
# Este sera nuestro directorio de trabajo, por library(openxlsx)favor modificar a su directorio personal, al momento de probar.
setwd("/home/linux/Documents/algoritmos R")
#Se debe pasar la ruta en este caso seria esta.
crioterapia <-read.xlsx("Cryotherapy.xlsx", sheet = 1)
crioterapia
#Permite mostrar el dataset en pantalla en una seccion nueva.
View(crioterapia)
#La imputacion de datos es la sustitucion de valores  no informados en una observacion por otros. A veces es necesario para pdoer
#tratar los datos con determinadas tecnicas estadisticas o analisis.
#Generamos las medidas estadisticas de cada  variable.
summary(crioterapia)
#El dataset elegido tiene un 12% de datos faltantes, ahora vamos a probar la eficiencia de las tecnicas de imputaciond e datos.
#En este caso se usa las medias para completar los datos faltantes
crioterapia <-read.xlsx("Cryotherapy.xlsx", sheet = 1)
crioterapia$sex <- ifelse(is.na(crioterapia$sex),mean(crioterapia$sex, na.rm=TRUE), crioterapia$sex)
crioterapia$age <- ifelse(is.na(crioterapia$age),mean(crioterapia$age, na.rm=TRUE), crioterapia$age)
crioterapia$Type <- ifelse(is.na(crioterapia$Type),mean(crioterapia$Type, na.rm=TRUE), crioterapia$Type)
crioterapia$Time <- ifelse(is.na(crioterapia$Time),mean(crioterapia$Time, na.rm=TRUE), crioterapia$Time)
crioterapia$Area <- ifelse(is.na(crioterapia$Area),mean(crioterapia$Area, na.rm=TRUE), crioterapia$Area)
crioterapia$Result_of_Treatment <- ifelse(is.na(crioterapia$Result_of_Treatment),mean(crioterapia$Result_of_Treatment, na.rm=TRUE), crioterapia$Result_of_Treatment)
crioterapia$Number_of_Warts <- ifelse(is.na(crioterapia$Number_of_Warts),mean(crioterapia$Number_of_Warts, na.rm=TRUE),crioterapia$Number_of_Warts)
View(crioterapia)
data <-read.xlsx("Cryotherapy.xlsx", sheet = 1)
# los test de homogeneidad no arrojan mucha variacion.
View(crioterapia)
bartlett.test(crioterapia)
bartlett.test(data)
#Cuando observamos ambas graficas se puede observar que la densidad de la data por este metodo en vez de ajustar los datos, les da una cierta expansion al centro, pero no varia mucho la data en relacion a si no se aplica el metodo, al menos para la edad, pero la ineficiencia de este metodo crecera a medida que la data aumente y el porcentaje de error sea mayor.
plot(density(crioterapia$age,na.rm = T),col=2,main="age")
plot(density(data$age,na.rm = T),col=2,main="age")
#En este caso se usa las medianas para completar los datos faltantes
crioterapia <-read.xlsx("Cryotherapy.xlsx", sheet = 1)
View(crioterapia)
crioterapia$sex <- ifelse(is.na(crioterapia$sex),median(crioterapia$sex, na.rm=TRUE), crioterapia$sex)
crioterapia$age <- ifelse(is.na(crioterapia$age),median(crioterapia$age, na.rm=TRUE), crioterapia$age)
crioterapia$Type <- ifelse(is.na(crioterapia$Type),median(crioterapia$Type, na.rm=TRUE), crioterapia$Type)
crioterapia$Time <- ifelse(is.na(crioterapia$Time),median(crioterapia$Time, na.rm=TRUE), crioterapia$Time)
crioterapia$Area <- ifelse(is.na(crioterapia$Area),median(crioterapia$Area, na.rm=TRUE), crioterapia$Area)
crioterapia$Result_of_Treatment <- ifelse(is.na(crioterapia$Result_of_Treatment),median(crioterapia$Result_of_Treatment, na.rm=TRUE), crioterapia$Result_of_Treatment)
crioterapia$Number_of_Warts <- ifelse(is.na(crioterapia$Number_of_Warts),median(crioterapia$Number_of_Warts, na.rm=TRUE),crioterapia$Number_of_Warts)
View(crioterapia)
plot(density(data$age,na.rm = T),col=2,main="age")
# los test de homogeneidad no arrojan mucha variacion.
bartlett.test(crioterapia)
bartlett.test(data)
#Cuando observamos ambas graficas se puede observar que la densidad de la data por este metodo en vez de ajustar los datos, les da una cierta expansion al centro,al igual que con la media, a medida que el margeen de error y las instancias aumenten, el porcentaje de error y la grafica tendran mayores variaciones.
plot(density(crioterapia$age,na.rm = T),col=2,main="age")
plot(density(data$age,na.rm = T),col=2,main="age")
#Imputación LOCF
#Son métodos de imputación ad hoc para datos longitudinales. La idea es tomar el valor observado anterior como un reemplazo de los datos faltantes. Cuando faltan varios valores en sucesión, el método busca el último valor observado.
library(tidyr)
data <-read.xlsx("Cryotherapy.xlsx", sheet = 1)
imputar <- tidyr::fill(data, age)
imputar <- tidyr::fill(imputar, sex)
imputar <- tidyr::fill(imputar, Type)
imputar <- tidyr::fill(imputar, Time)
imputar <- tidyr::fill(imputar, Area)
imputar <- tidyr::fill(imputar, Result_of_Treatment )
imputar <- tidyr::fill(imputar, Number_of_Warts)
View(imputar)
# los test de homogeneidad no arrojan mucha variacion.
bartlett.test(crioterapia)
bartlett.test(data)
#Cuando observamos ambas graficas se puede observar que la densidad de la data por este metodo en vez de apretar los datos, les da una cierta expansion, lo cual no es beneficioso
plot(density(imputar$sex,na.rm = T),col=2,main="sex")
plot(density(data$sex,na.rm = T),col=2,main="sex")
#Cuando observamos ambas graficas se puede observar que la densidad de la data por este metodo en vez de apretar los datos, les da una cierta expansion al centro, pero no varia mucho la data en relacion a si no se aplica el metodo, al menos para la edad.
plot(density(imputar$age,na.rm = T),col=2,main="age")
plot(density(data$age,na.rm = T),col=2,main="age")
# Prueba de homogeniedad de varianza
# bartlett.test(dataCaesarian.age,data=dataCaesarian)
View(dataCaesarian$age)
vec_age <- dataCaesarian.frame(vectors)
vec_age <- data.frame(vectors)
vec_age <- data.frame(dataCaesarian$age)
View(vec_age)
vec_age <- data.frame(dataCaesarian$age)
View(vec_age)
bartlett.test(vec_age,data=dataCaesarian)
View(dataCaesarian)
# Prueba de homogeniedad de varianza
# vec_age <- data.frame(dataCaesarian$age)
# View(vec_age)
# bartlett.test(vec_age,data=dataCaesarian)
datos <- c(dataCaesarian$age, dataCaesarian$caesariam)
# Prueba de homogeniedad de varianza
# vec_age <- data.frame(dataCaesarian$age)
# View(vec_age)
# bartlett.test(vec_age,data=dataCaesarian)
datos <- c(dataCaesarian$age)
# Prueba de homogeniedad de varianza
# vec_age <- data.frame(dataCaesarian$age)
# View(vec_age)
# bartlett.test(vec_age,data=dataCaesarian)
datos <- c(dataCaesarian2$age)
# Prueba de homogeniedad de varianza
# vec_age <- data.frame(dataCaesarian$age)
# View(vec_age)
# bartlett.test(vec_age,data=dataCaesarian)
datos <- c(dataCaesarian$age)
